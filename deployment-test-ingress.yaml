apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2019-06-25T12:41:06Z"
  generation: 1
  labels:
    app.improvado.io/application: nginx-ingress-controller
    app.improvado.io/instance: test-ingress
  name: test-ingress
  namespace: nginx-ingress-operator-debug
  ownerReferences:
  - apiVersion: app.improvado.io/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: NginxIngress
    name: test-ingress
    uid: cbd92e11-9743-11e9-aa32-0aefbff94bca
  resourceVersion: "46705236"
  selfLink: /apis/extensions/v1beta1/namespaces/nginx-ingress-operator-debug/deployments/test-ingress
  uid: 80106cc6-9746-11e9-9e21-12e4f3f962fe
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.improvado.io/application: nginx-ingress-controller
      app.improvado.io/instance: test-ingress
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"app.improvado.io/v1alpha1","kind":"NginxIngress","metadata":{"annotations":{},"name":"test-ingress","namespace":"nginx-ingress-operator-debug"},"spec":{"nginxController":{"config":{"http2-max-field-size":"16k","use-proxy-protocol":"true"},"image":{"pullPolicy":"IfNotPresent","repository":"quay.io/kubernetes-ingress-controller/nginx-ingress-controller","tag":"0.24.1"},"ingressClass":"testicula","runAsUser":33},"replicas":1,"service":{"ports":[{"name":"http","port":80,"protocol":"TCP","targetPort":80},{"name":"https","port":443,"protocol":"TCP","targetPort":443}],"type":"LoadBalancer"},"serviceAccount":"nginx-ingress-operator"}}
      creationTimestamp: null
      labels:
        app.improvado.io/application: nginx-ingress-controller
        app.improvado.io/component: application
        app.improvado.io/instance: test-ingress
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --ingress-class=testicula
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.24.1
        imagePullPolicy: IfNotPresent
        name: nginx-ingress
        ports:
        - containerPort: 80
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsUser: 33
      serviceAccount: nginx-ingress-operator
      serviceAccountName: nginx-ingress-operator
      terminationGracePeriodSeconds: 30
status:
  conditions:
  - lastTransitionTime: "2019-06-25T12:41:06Z"
    lastUpdateTime: "2019-06-25T12:41:06Z"
    message: Deployment does not have minimum availability.
    reason: MinimumReplicasUnavailable
    status: "False"
    type: Available
  - lastTransitionTime: "2019-06-25T12:41:06Z"
    lastUpdateTime: "2019-06-25T12:41:06Z"
    message: ReplicaSet "test-ingress-5dd5756f56" is progressing.
    reason: ReplicaSetUpdated
    status: "True"
    type: Progressing
  observedGeneration: 1
  replicas: 1
  unavailableReplicas: 1
  updatedReplicas: 1
